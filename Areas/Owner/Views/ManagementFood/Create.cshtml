@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Add FoodItem";
}
@model StoreManagement.DTO.FoodItemDTO
@using Microsoft.AspNetCore.Mvc.Rendering

<h2>Add New FoodItem</h2>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" required />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Price"></label>
        <input asp-for="Price" class="form-control" required />
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description"></label>
        <textarea asp-for="Description" class="form-control" required></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="FoodCategoryId">Food Category</label>
        <select asp-for="FoodCategoryId" asp-items="ViewBag.FoodCategories" class="form-control">
            <option value="">Select a category...</option>
        </select>
        <span asp-validation-for="FoodCategoryId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="ImageUrl">Food Image</label>
        <input type="file" asp-for="ImageUrl" class="form-control" />
        <span asp-validation-for="ImageUrl" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
    <a asp-controller="ManagementFood" asp-action="Index">
        <button type="button" class="btn btn-info">Return</button>
    </a>
</form>
@section Scripts{
    @{
        <partial name="_ValidationScriptsPartial" />   
    }
}
<script>
    document.getElementById('imageInput').addEventListener('change', function (event) {
        var output = document.getElementById('previewImage');
        if (this.files && this.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                output.src = e.target.result;
                output.style.display = 'block';
            };
            reader.readAsDataURL(this.files[0]);
        }
    });
</script>
